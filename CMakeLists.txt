cmake_minimum_required (VERSION 2.8.7)
project (Spob C CXX)

set (Spob_VERSION_MAJOR 0)
set (Spob_VERSION_MINOR 1)

include(CheckCXXCompilerFlag)
include(CTest)

set (CMAKE_CXX_FLAGS_DEBUG "")
set (CMAKE_CXX_FLAGS_RELEASE "")
set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "")
set (CMAKE_CXX_FLAGS_MINSIZEREL "")

check_cxx_compiler_flag(-Wall HAS_WALL)
if (HAS_WALL)
   set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
endif()
check_cxx_compiler_flag(-Werror HAS_WERROR)
if (HAS_WERROR)
   set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
endif()
check_cxx_compiler_flag(-O0 HAS_O0)
if (HAS_O0)
   set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
endif()
check_cxx_compiler_flag(-g3 HAS_G3)
if (HAS_G3)
   set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g3")
   set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -g3")
endif()
# check_cxx_compiler_flag(-pg HAS_PG)
# if (HAS_PG)
#    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pg")
#    set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -pg")
# endif()
check_cxx_compiler_flag(-O2 HAS_O2)
if (HAS_O2)
   set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -O2")
endif()
check_cxx_compiler_flag(-O3 HAS_O3)
if (HAS_O3)
   set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
endif()
check_cxx_compiler_flag(-Os HAS_OS)
if (HAS_OS)
   set (CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} -Os")
endif()
# check_cxx_compiler_flag(-fprofile-arcs HAS_FPROFILE_ARCS)
# if (HAS_FPROFILE_ARCS)
#    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fprofile-arcs")
#    set (CMAKE_CXX_FLAGS_RELWITHDEBINFO
#       "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -fprofile-arcs") 
# endif()
# check_cxx_compiler_flag(-ftest-coverage HAS_FTEST_COVERAGE)
# if (HAS_FTEST_COVERAGE)
#    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -ftest-coverage")
#    set (CMAKE_CXX_FLAGS_RELWITHDEBINFO
#       "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -ftest-coverage")
# endif()

add_subdirectory(test)
